name: 'create / return cluster'
on:
  workflow_call:
    inputs:
      # CLI Environment Variations
      os:
        required: true
        type: string 
      instance-type:
        required: true  
        type: string
    secrets:
      # CLI Logins
      gridai-username:
        required: true
      gridai-key:
        required: true
    outputs:
      cluster-name:
        value: ${{ jobs.example_job.outputs.output1 }}
        
jobs:
  unittests:
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        python-version: [3.8]                 #,3.9]       
        python-venv: [""]                     #,"venv"]
        byoc-cost-savings: ["--cost-savings"] #, ""]
        byoc-region: ["us-east-1"]       
        byoc-instance-types: ["--instance-types t2.medium,g4dn.xlarge"]       
    runs-on: ${{ inputs.os }}
    timeout-minutes: 60 # takes about 20 min to create the cluster
    steps:
      - uses: gridai-actions/gridai-login@main
        with:
          python-version: ${{ matrix.python-version }}
          python-venv: ${{ matrix.python-venv }}
          gridai-username: ${{ secrets.gridai-username }} 
          gridai-key: ${{ secrets.gridai-key }}

      - id: gridai-obj-create
        run: |
          gridai.py cli "grid cluster  --ignore_warnings ${BYOC_CLUSTER} ${{ inputs.grid-args }} ${{ inputs.script-name }} ${{ inputs.script-args }}" status_to_kv --gha True
        shell: bash  

      - id: gridai-obj-status
        run: |
          gridai.py run ${{ steps.gridai-obj-create.outputs.grid_name }} --gha True
        shell: bash  

      - run: |
          if [ -z "$(echo ${{ steps.gridai-obj-status.outputs.obj-summary }} | grep '${{ inputs.success-status }}')" ]; then
            exit 1
          fi             
        shell: bash          
